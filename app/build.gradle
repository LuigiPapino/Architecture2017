def retrieveVersionName() {
  return project.hasProperty('version_name') ? version_name : default_version_name
}

def retrieveVersionCode() {
  return project.hasProperty('version_code') ? version_code.toInteger() : default_version_code
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
  compileSdkVersion compile_sdk_version
  buildToolsVersion build_tool_version
  defaultConfig {
    applicationId application_id
    minSdkVersion min_sdk_version
    targetSdkVersion target_sdk_version
    versionCode retrieveVersionCode()
    versionName retrieveVersionName()
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  //KOTLIN
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

  //SUPPORT
  compile "com.android.support:appcompat-v7:$android_support_version"
  compile "com.android.support:support-v4:$android_support_version"
  compile "com.android.support:recyclerview-v7:$android_support_version"
  compile "com.android.support:design:$android_support_version"

  //DAGGER
  compile "com.google.dagger:dagger:$dagger_version"
  compile "com.google.dagger:dagger-android-support:$dagger_version"
  annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"


  //--------UNIT TEST-------
  //JUNIT
  testCompile "junit:junit:$junit_version"

  //--------ANDROID TEST-------
  //ESPRESSO
  androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version", {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}
repositories {
  mavenCentral()
}
